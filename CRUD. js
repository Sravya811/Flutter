const mongoose = require('mongoose');

// MongoDB connection string
const uri = "mongodb://localhost:27017/demo";

// Connect to MongoDB
mongoose.connect(uri, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
  .then(() => console.log(" Connected to MongoDB"))
  .catch(err => console.error(" MongoDB connection error:", err));

// Define schema
const userSchema = new mongoose.Schema({
  name: String,
  email: String,
  age: Number,
});

// Create model
const User = mongoose.model("User", userSchema);

// Create a new user
async function createUser() {
  const user = new User({
    name: "CSE",
    email: "CSE@example.com",
    age: 18,
  });
  await user.save();
  console.log("User created:", user);
}

// Get all users
async function getUsers() {
  const users = await User.find();
  console.log("All users:", users);
}

// Get a single user by email
async function getUserByEmail(email) {
  const user = await User.findOne({ email });
  console.log("Found user:", user);
}

// Update user details by email
async function updateUser(email) {
  const user = await User.findOneAndUpdate(
    { email },
    { age: 30 }, // updating age
    { new: true } // return updated document
  );
  console.log("Updated user:", user);
}

// Delete user by email
async function deleteUser(email) {
  const result = await User.deleteOne({ email });
  console.log("Deleted user:", result);
}

// Run CRUD operations
async function runCRUD() {
  await createUser();
  await getUsers();
  await getUserByEmail("CSE@example.com");
  await updateUser("CSE@example.com");
  await deleteUser("CSE@example.com");
  await getUsers(); // check remaining users
}

runCRUD();
